plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.+"
    id "io.github.p03w.machete" version "1.+"
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

repositories {
    mavenLocal()
    maven { url "https://cursemaven.com/" }
    maven { url "https://maven.wispforest.io/" }
}

loom {
    accessWidenerPath = file("src/main/resources/open.accesswidener")
    sourceSets {
        main {
            resources {
                srcDir("src/generated/resources")
                exclude("src/generated/resources/.cache")
            }
        }
    }

    runs {
        datagen {
            client()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=open_skies"

            runDir "build/datagen"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "mcjty.theoneprobe:theoneprobe-fabric:${project.top_version}"
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation "me.alphamode:Star:${project.star_version}"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
